description: |
  Creates an AutoML Tables dataset from the data in BigQuery.
implementation:
  container:
    args:
    - inputValue: location
    - inputValue: project_id
    - inputValue: dataset_id
    - inputValue: table_id
    - inputValue: display_name
    - outputPath: automl_dataset_name
    - outputPath: automl_dataset_id
    command:
    - python3
    - -c
    - "from typing import NamedTuple\n\ndef import_dataset(\n    location: str,\n\
      \    project_id: str,\n    dataset_id: str,\n    table_id: str,\n    display_name:\
      \ str) -> NamedTuple('DatasetInfo', \n                               [('automl_dataset_name',\
      \ str), \n                                ('automl_dataset_id', str)]):\n  \
      \  \"\"\"Creates an AutoML Tables dataset from the data in BigQuery.\"\"\"\n\
      \    \n    from collections import namedtuple\n    from google.cloud import\
      \ automl_v1beta1 as automl\n    \n    client = automl.AutoMlClient()\n    #\
      \ Create dataset\n    location_path = client.location_path(project_id, location)\n\
      \    create_dataset_response = client.create_dataset(\n        location_path,\n\
      \        {\n            'display_name': display_name,\n            'tables_dataset_metadata':\
      \ {}\n        })\n    \n    path = \"bq://{}.{}.{}\".format(project_id, dataset_id,\
      \ table_id)\n    input_config = {\"bigquery_source\": {\"input_uri\": path}}\n\
      \    import_data_response = client.import_data(create_dataset_response.name,\
      \ input_config)\n    print(\"Initiating import ...\")\n    # synchronous check\
      \ of operation status.\n    print(\"Data imported. {}\".format(import_data_response.result()))\n\
      \    \n    # Return component outputs\n    result = namedtuple('DatasetInfo',\
      \ ['automl_dataset_name', 'automl_dataset_id'])\n    return result(create_dataset_response.display_name,\
      \ create_dataset_response.name)\n\nimport sys\n_args = {\n    'location': str(sys.argv[1]),\n\
      \    'project_id': str(sys.argv[2]),\n    'dataset_id': str(sys.argv[3]),\n\
      \    'table_id': str(sys.argv[4]),\n    'display_name': str(sys.argv[5]),\n\
      }\n_output_files = [\n    sys.argv[6],\n    sys.argv[7],\n]\n\n_outputs = import_dataset(**_args)\n\
      \nif not hasattr(_outputs, '__getitem__') or isinstance(_outputs, str):\n  \
      \  _outputs = [_outputs]\n\nfrom pathlib import Path\nfor idx, filename in enumerate(_output_files):\n\
      \    _output_path = Path(filename)\n    _output_path.parent.mkdir(parents=True,\
      \ exist_ok=True)\n    _output_path.write_text(str(_outputs[idx]))\n"
    image: gcr.io/sandbox-235500/automltablesbase:dev
inputs:
- name: location
  type: str
- name: project_id
  type: str
- name: dataset_id
  type: str
- name: table_id
  type: str
- name: display_name
  type: str
name: Import dataset
outputs:
- name: automl_dataset_name
  type: str
- name: automl_dataset_id
  type: str
