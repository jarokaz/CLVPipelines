# Build and deploy CLV components and pipelines

steps:

# Clone CLV repo
- name: 'gcr.io/cloud-builders/git'
  args:
  - clone
  - --depth
  - '1'
  - --verbose
  - https://github.com/${_CLV_REPO}
  - clv

# Build a base image for lightweight components
- name: 'gcr.io/cloud-builders/docker' 
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/$_BASE_IMAGE:$_TAG', '.'] 
  dir: 'clv/clv_pipelines/helper_components'

# Build the AutoML Tables component image
- name:  'gcr.io/cloud-builders/docker' 
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/$_AUTOML_TABLES_IMAGE:$_TAG', '.'] 
  dir: 'clv/automl_tables_components'

# Create the image for custom build steps 
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'kfp-compiler', '.']
  dir: 'clv/build-deploy/kfp-compiler-builder'

# Update AutoML components specs with the container image name 
- name: 'kfp-compiler'
  entrypoint: 'python'
  args: 
  - update_image_name_in_specs.py
  - ../../automl_tables_components/specs 
  - gcr.io/$PROJECT_ID/$_AUTOML_TABLES_IMAGE:$_TAG
  dir: 'clv/build-deploy/helpers'

# Update pipeline settings 
- name: 'kfp-compiler'
  entrypoint: 'python'
  args: 
  - update_pipeline_settings.py 
  - ../../clv_pipelines/settings.yaml
  - --compiler_settings.lightweight_components_base_image=gcr.io/$PROJECT_ID/$_BASE_IMAGE:$_TAG
  - --argument_defaults.query_template_uri=gs://$_BUCKET_NAME/$_ARTIFACTS_FOLDER/query_template.sql.jinja
  dir: 'clv/build-deploy/helpers'

# Compile the pipelines 
- name: 'kfp-compiler'
  args:
  - '-c'
  - |
    dsl-compile --py  train_pipeline.py --output ${_TRAIN_PIPELINE}.tar.gz --disable-type-check
  dir: 'clv/clv_pipelines'
- name: 'kfp-compiler'
  args:
  - '-c'
  - |
    dsl-compile --py  batch_predict_pipeline.py --output ${_PREDICT_PIPELINE}.tar.gz --disable-type-check
  dir: 'clv/clv_pipelines'

# Deploy the compiled pipelines
- name: 'gcr.io/cloud-builders/gsutil'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    gsutil mb -p $PROJECT_ID gs://$_BUCKET_NAME || exit 0

- name: 'gcr.io/cloud-builders/gsutil'
  args: ['cp', '*.tar.gz', 'gs://$_BUCKET_NAME/$_PIPELINES_FOLDER']
  dir: 'clv/clv_pipelines'

# Deploy the SQL query template
- name: 'gcr.io/cloud-builders/gsutil' 
  args: 
  - cp
  - artifacts/query_template.sql.jinja
  - gs://$_BUCKET_NAME/$_ARTIFACTS_FOLDER/query_template.sql.jinja
  dir: 'clv/clv_pipelines'

# Deploy the sample dataset
- name: 'gcr.io/cloud-builders/gsutil' 
  args: 
  - cp
  - gs://clv-datasets/transactions/transactions.csv
  - gs://$_BUCKET_NAME/$_SAMPLE_DATASET_FOLDER/transactions.csv
  dir: 'clv/clv_pipelines'

# Push component images
images: ['gcr.io/$PROJECT_ID/${_BASE_IMAGE}', 'gcr.io/$PROJECT_ID/${_AUTOML_TABLES_IMAGE}']
